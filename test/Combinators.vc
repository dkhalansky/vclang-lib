\func id {X : \Type} (x : X) => x

\func const {X Y : \Type} (x : X) (y : Y) => x

\func \infixr 1 $ {X Y : \Type} (f : X -> Y) (x : X) => f x

\func \infixr 8 o {X Y Z : \Type} (g : Y -> Z) (f : X -> Y) (x : X) => g $ f x

\func flip {X Y Z : \Type} (f : X -> Y -> Z) (y : Y) (x : X) => f x y

\func curry {A B C : \Type} (f : \Sigma A B -> C) : A -> B -> C => \lam a b => f (a, b)

\func uncurry {A B C : \Type} (f : A -> B -> C) : \Sigma A B -> C => \lam p => f p.1 p.2

\func curry-d {A C : \Type} (B : A -> \Type) (f : \Sigma (a : A) (B a) -> C) : \Pi (a : A) (B a) -> C => \lam a b => f (a, b)

\func uncurry-d {A C : \Type} (B : A -> \Type) (f : \Pi (a : A) (B a) -> C) : \Sigma (a : A) (B a) -> C => \lam p => f p.1 p.2
