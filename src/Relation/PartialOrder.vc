\import Data.Empty

\class Preorder (El : \Set) {
  | \infix 4 <= : El -> El -> \Prop
  | reflexive (x : El) : x <= x
  | transitive (x y z : El) : x <= y -> y <= z -> x <= z
}

\class Poset \extends Preorder {
  | antisymmetric (x y : El) : x <= y -> y <= x -> x = y
}

\class StrictPoset (El : \Set) {
  | \infix 4 < : El -> El -> \Prop
  | antireflexive (x : El) : x < x -> Empty
  | transitive (x y z : El) : x < y -> y < z -> x < z
}

\class Positive {X : \Set} {M : WithZero X} {P : StrictPoset X} (x : X) {p : x > 0}
