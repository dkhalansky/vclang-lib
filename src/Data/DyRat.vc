\import Data.Int
\import Relation.PartialOrder
\import Algebra.Ring

\data \class DyRat (nominator : Int) (denominatorLog : Nat)

\func dyRat (n : Int) (d : Nat) => \new DyRat n d

\instance DyRatRing : CRing
  | El => DyRat
  | zero => dyRat (pos 0) 0
  | + q r => {?}
  | +-assoc q r s => {?}
  | zero-left q => {?}
  | zero-right q => {?}
  | +-comm q r => {?}
  | mulCMonoid {
    | ident => dyRat (pos 1) 0
    | * q r => {?}
    | *-assoc q r s => {?}
    | ident-left q => {?}
    | ident-right q => {?}
    | *-comm q r => {?}
  }
