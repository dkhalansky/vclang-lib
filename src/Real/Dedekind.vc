\import Data.DyRat
\import Data.Empty
\import Data.Either

\class DyReal {
  | L : DyRat -> \Prop
  | R : DyRat -> \Prop
  | L-inh : TrP (\Sigma (q : DyRat) (L q))
  | R-inh : TrP (\Sigma (q : DyRat) (R q))
  | L-isLower (q r : DyRat) : q < r -> L r -> L q
  | U-isUpper (q r : DyRat) : q < r -> U q -> U r
  | L-isOpen (q : DyRat) : TrP (\Sigma (r : DyRat) (q < r) (L r))
  | U-isOpen (r : DyRat) : TrP (\Sigma (q : DyRat) (q < r) (U q))
  | LU-aredisjoint (q : DyRat) : L q -> R q -> Empty
  | LU-areLocated (q r : DyRat) : q < r -> TrP (Either (L q) (U r))
}